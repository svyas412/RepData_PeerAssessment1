household_power <- read.csv("C:/testR/labs-r/household_power_consumption.txt", sep=";")
head (household_power)
DATE1 <- as.Date(16/12/2006)
DATE1 <- date(as.Date(16/12/2006))
DATE1 <- as.Date("16/12/2006")
data <- filter(household_power, household_power$Date == "DATE1" )#&  household_power$Date <= DATE2)
head (household_power)
data <- filter(household_power, household_power$Date >= "DATE1" )#&  household_power$Date <= DATE2)
data <- filter(household_power, household_power$Date >= DATE1 )#&  household_power$Date <= DATE2)
head (household_power)
data <- filter(household_power, household_power$Date >= DATE1 &  household_power$Date <= DATE2)
head (household_power)
dim(data)
data <- filter(household_power, household_power$Date >= "16/12/2006"# &  household_power$Date <= DATE2)
data <- filter(household_power, household_power$Date == "16/12/2006"# &  household_power$Date <= DATE2)
data <- filter(household_power, household_power$Date == "16/12/2006"# &  household_power$Date <= DATE2)
data <- filter(household_power, household_power$Date == "16/12/2006"# &  household_power$Date <= DATE2)
data <- filter(household_power, household_power$Date == "16/12/2006")# &  household_power$Date <= DATE2)
head (data)
dim(data)
data <- filter(household_power, household_power$Date == DATE1)# &  household_power$Date <= DATE2)
?Ops.Date
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
household_power <- read.table("C:/testR/labs-r/household_power_consumption.txt", header = TRUE sep=";", dec=".")
household_power <- read.table("C:/testR/labs-r/household_power_consumption.txt", header = TRUE, sep=";", dec=".")
subSetData <- data[household_power$Date %in% c("1/2/2007","2/2/2007") ,]
subSetData <- household_power[household_power$Date %in% c("1/2/2007","2/2/2007") ,]
head (subSetData)
dim(subSetdata)
dim(subSetData)
str(subSetData)
subSetData <- household_power[household_power$Date %in% c(DATE1,"2/2/2007") ,]
head (subSetData)
dim(subSetData)
subSetData <- household_power[household_power$Date %in% c(DATE1,DATE2) ,]
subSetData <- household_power[household_power$Date %in% c(DATE1,DATE2) ,]
head (subSetData)
subSetData <- household_power[household_power$Date %in% DATE1 ,]
subSetData <- household_power[household_power$Date %in% DATE1 ,]
dim(subSetData)
subSetData <- household_power[household_power$Date %in% "1/2/2007" ,]
subSetData <- household_power[household_power$Date %in% c("1/2/2007", "2/2/2007") ,]
str(subSetData)
?dec
??dec
?read.table
dataFile <- "./data/household_power_consumption.txt"
household_power <- read.table(dataFile, header = TRUE, sep=";", dec=".")
householdPower <- read.table(dataFile, header = TRUE, sep=";", dec=".")
subSetData <- householdPower[householdPower$Date %in% c("1/2/2007", "2/2/2007") ,]
head (subSetData)
rawData <- "./data/household_power_consumption.txt"
householdPower <- read.table(dataFile, header = TRUE, sep=";", dec=".")
rawData <- "./data/household_power_consumption.txt"
householdPower <- read.table(dataFile, header = TRUE, sep=";", dec=".")
householdPower <- read.table(rawData, header = TRUE, sep=";", dec=".")
subSetData <- householdPower[householdPower$Date %in% c("1/2/2007", "2/2/2007") ,]
Globalactivepower <- as.numeric(subsetData$Global_active_power)
Globalactivepower <- as.numeric(subSetData$Global_active_power)
hist(globalActivePower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
hist(globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
png("plot1.png", width=480, height=480)
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
png("plot1.png", width=480, height=480)
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
png("plot1t.png", width=480, height=480)
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
#Save file location in a variable
rawData <- "./data/household_power_consumption.txt"
#Read the data and seperate the fields
householdPower <- read.table(rawData, header = TRUE, sep=";", dec=".")
#Subset the data for 2 relevant dates
subSetData <- householdPower[householdPower$Date %in% c("1/2/2007", "2/2/2007") ,]
#Check the data frame
#head (subSetData)
#dim(subSetData)
#[1] 2880    9
#str(subSetData)
#Plot 1  Histogram
#Set field to numeric
Globalactivepower <- as.numeric(subSetData$Global_active_power)
png("plot1t.png", width=480, height=480)
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
View(householdPower)
View(householdPower)
?date
??date format
??date
mutate(subSetData, DateTime = Date&&Time)
li
library(dplyr)
mutate(subSetData, DateTime = Date&&Time)
mutate(subSetData, DateTime = paste(subSetData$Date, subSetDate$time, sep=" "))
Globalactivepower <- as.numeric(subSetData$Global_active_power)
mutate(subSetData, DateTime = paste(subSetData$Date, subSetDate$time, sep=" "))
png("plot1.png", width=480, height=480)
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
mutate(subSetData, DateTime = paste(subSetData$Date, subSetDate$time, sep=" "))
paste(subSetData$Date, subSetDate$time, sep=" "))
paste(subSetData$Date, subSetDate$time, sep=" ")
subSetData <- householdPower[householdPower$Date %in% c("1/2/2007", "2/2/2007") ,]
paste(subSetData$Date, subSetDate$time, sep=" ")
subSetData %>%
select (Date, Time) %>%
paste(subSetData$Date, subSetDate$time, sep=" ")
DateTime <- paste(subSetData$Date, subSetDate$time, sep=" ")
DateTime <- paste(subSetData$Date, subSetData$time, sep=" ")
DateTime
head(subSetData)
head(DateTime)
DateTime <- paste(subSetData$Date, subSetData$Time, sep=" ")
head(DateTime)
head(subSetData)
Day <- strptime (DateTime, "%d/%m/%Y %H:%M:%S")
head(Day)
png("plot2.png", width=480, height=480)
plot(datetime, globalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
> plot(Day, globalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(Day, globalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(Day, globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
png("plot2.png", width=480, height=480)
png("plot2.png", width=480, height=480)
png("plot2.png", width=480, height=480)
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
Day
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
Globalactivepower <- as.numeric(subSetData$Global_active_power)
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
png("plot2.png", width=480, height=480)
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(DateTime, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
#Save file location in a variable
rawData <- "./data/household_power_consumption.txt"
#Read the data and seperate the fields
householdPower <- read.table(rawData, header = TRUE, sep=";", dec=".")
#Subset the data for 2 relevant dates
subSetData <- householdPower[householdPower$Date %in% c("1/2/2007", "2/2/2007") ,]
#Check the data frame
#head (subSetData)
#dim(subSetData)
#[1] 2880    9
#str(subSetData)
#Plot 1  Histogram
#Set field to numeric
Globalactivepower <- as.numeric(subSetData$Global_active_power)
png("plot1t.png", width=480, height=480)
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
#mutate(subSetData, DateTime = paste(subSetData$Date, subSetDate$time, sep=" "))
subSetData %>%
select (Date, Time) %>%
DateTime <- paste(subSetData$Date, subSetData$Time, sep=" ") %>%
Day <- strptime (DateTime, "%d/%m/%Y %H:%M:%S")
png("plot2.png", width=480, height=480)
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
Day <- strptime (DateTime, "%d/%m/%Y %H:%M:%S")
DateTime <- paste(subSetData$Date, subSetData$Time, sep=" ") %>%
head(DateTime)
DateTime <- paste(subSetData$Date, subSetData$Time, sep=" ") %>%
day
Day
Day <- strptime (paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
head(Day)
png("plot2.png", width=480, height=480)
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
Day <- strptime (paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
#Save file location in a variable
rawData <- "./data/household_power_consumption.txt"
#Read the data and seperate the fields
householdPower <- read.table(rawData, header = TRUE, sep=";", dec=".")
#Subset the data for 2 relevant dates
subSetData <- householdPower[householdPower$Date %in% c("1/2/2007", "2/2/2007") ,]
#Check the data frame
#head (subSetData)
#dim(subSetData)
#[1] 2880    9
#str(subSetData)
#Plot 1  Histogram
#Set field to numeric
Globalactivepower <- as.numeric(subSetData$Global_active_power)
png("plot1t.png", width=480, height=480)
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
#mutate(subSetData, DateTime = paste(subSetData$Date, subSetDate$time, sep=" "))
subSetData %>%
select (Date, Time) %>%
#DateTime <- paste(subSetData$Date, subSetData$Time, sep=" ") %>%
Day <- strptime (paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
png("plot2.png", width=480, height=480)
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
Day <- strptime (paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
png("plot2.png", width=480, height=480)
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
?plot
png("plot1.png", width=480, height=480)
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
library(ggplot2)
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
Save file location in a variable
rawData <- "./data/household_power_consumption.txt"
#Read the data and seperate the fields
householdPower <- read.table(rawData, header = TRUE, sep=";", dec=".")
#Subset the data for 2 relevant dates
subSetData <- householdPower[householdPower$Date %in% c("1/2/2007", "2/2/2007") ,]
#Check the data frame
#head (subSetData)
#dim(subSetData)
#[1] 2880    9
#str(subSetData)
#Plot 1  Histogram
#Set field to numeric
Globalactivepower <- as.numeric(subSetData$Global_active_power)
png("plot1.png", width=480, height=480)
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
#mutate(subSetData, DateTime = paste(subSetData$Date, subSetDate$time, sep=" "))
subSetData %>%
select (Date, Time) %>%
#DateTime <- paste(subSetData$Date, subSetData$Time, sep=" ") %>%
Day <- strptime (paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
png("plot2.png", width=480, height=480)
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
Day <- strptime (paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
png("plot2.png", width=480, height=480)
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(Day, Globalactivepower, type="3", xlab="", ylab="Global Active Power (kilowatts)")
plot(Day, Globalactivepower, type="1", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
png("plot2.png", width=480, height=480)
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
#Set field to numeric
Globalactivepower <- as.numeric(subSetData$Global_active_power)
png("plot1.png", width=480, height=480)
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
A = rnorm(10)
B = rnorm(100)
C = rnorm(500)
library(vioplot)
vioplot(A,B,C)
library(vioplot)
hist(A,B)
hist(Globalactivepower, col="red")
subSetData %>%
select (Date, Time) %>%
#DateTime <- paste(subSetData$Date, subSetData$Time, sep=" ") %>%
Day <- strptime (paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
Globalactivepower <- as.numeric(subSetData$Global_active_power)
png("plot2.png", width=480, height=480)
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
subSetData %>%
select (Date, Time) %>%
#DateTime <- paste(subSetData$Date, subSetData$Time, sep=" ") %>%
Day <- strptime (paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
Globalactivepower <- as.numeric(subSetData$Global_active_power)
png("plot2.png", width=480, height=480)
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
subSetData %>%
select (Date, Time) %>%
#DateTime <- paste(subSetData$Date, subSetData$Time, sep=" ") %>%
Day <- strptime (paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
Globalactivepower <- as.numeric(subSetData$Global_active_power)
png("plot2.png", width=480, height=480)
plot(Day, Globalactivepower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
rawData <- "./data/household_power_consumption.txt"
householdPower <- read.table(rawData, header = TRUE, sep=";", dec=".")
#Subset the data for 2 relevant dates
subSetData <- householdPower[householdPower$Date %in% c("1/2/2007", "2/2/2007") ,]
#Check the data frame
#head (subSetData)
#dim(subSetData)
#[1] 2880    9
#str(subSetData)
#Plot 1  Histogram
#Set field to numeric
Globalactivepower <- as.numeric(subSetData$Global_active_power)
png("plot1t.png", width=480, height=480)
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
#mutate(subSetData, DateTime = paste(subSetData$Date, subSetDate$time, sep=" "))
subSetData %>%
select (Date, Time) %>%
#DateTime <- paste(subSetData$Date, subSetData$Time, sep=" ") %>%
Day <- strptime (paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalActivePower <- as.numeric(subSetData$Global_active_power)
png("plot2.png", width=480, height=480)
plot(datetime, globalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
#Read the data and seperate the fields
householdPower <- read.table(rawData, header = TRUE, sep=";", dec=".")
#Subset the data for 2 relevant dates
subSetData <- householdPower[householdPower$Date %in% c("1/2/2007", "2/2/2007") ,]
#Check the data frame
#head (subSetData)
#dim(subSetData)
#[1] 2880    9
#str(subSetData)
#Plot 2
#Set field to numeric
Globalactivepower <- as.numeric(subSetData$Global_active_power)
png("plot1t.png", width=480, height=480)
hist(Globalactivepower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalActivePower <- as.numeric(subSetData$Global_active_power)
png("plot2.png", width=480, height=480)
plot(datetime, globalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
#Save file location in a variable
rawData <- "./data/household_power_consumption.txt"
#Read the data and seperate the fields
householdPower <- read.table(rawData, header = TRUE, sep=";", dec=".")
#Subset the data for 2 relevant dates
subSetData <- householdPower[householdPower$Date %in% c("1/2/2007", "2/2/2007") ,]
#str(subSetData)
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalActivePower <- as.numeric(subSetData$Global_active_power)
subMetering1 <- as.numeric(subSetData$Sub_metering_1)
subMetering2 <- as.numeric(subSetData$Sub_metering_2)
subMetering3 <- as.numeric(subSetData$Sub_metering_3)
png("plot3.png", width=480, height=480)
plot(datetime, subMetering1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering2, type="l", col="red")
lines(datetime, subMetering3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
dev.off()
library(Shiny)
library(shiny)
install.packages("shiny")
library(shiny)
library(shiny)
ui<-fliudpage(
## 6.  Compare emissions from motor vehicle sources in Baltimore City with emissions from motor vehicle
##     County, California (fips == 06037). Which city has seen
##     greater changes over time in motor vehicle emissions?
#Read the raw data files (Files existed from previous plot so below
#code will look for these files in working Dir)
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# filter NEI by Baltimore data fips=24510 and type=On Road
Baltimore_LA_Data <- NEI[(NEI$fips == "24510"|NEI$fips == "06037") & NEI$type == "ON-ROAD", ]
# merge the two data sets using primary key SCC field
if(!exists("NEI_SCC")){
NEI_SCC <- merge(Baltimore_LA_Data, SCC, by="SCC")
}
#View the combined data frame
head(NEI_SCC)
#Get yearly total from Motor Sources for Maryland and LA Counties
totalPM2.5_fips <- aggregate(Emissions ~ year+fips, NEI_SCC , sum)
#totalPM2.5_fips$fips[totalPM2.5_fips$fips %in% C("24510", "06037"),]
#Plot a chart using ggplot2
library(ggplot2)
png("plot6.png", width=980, height=780)
g<- ggplot(totalPM2.5_fips, aes(factor(year), Emissions))
p<- g+
facet_grid(.~ fips)+
geom_bar(stat="identity")+
xlab("Year")+
ylab(expression("Total Emission from Motor related sources (10^6 tons)"))+
ggtitle('Total Emissions from motor vehicle (type=ON-ROAD) in Baltimore City, MD (fips = "24510") vs Los Angeles, CA (fips = "06037")  1999-2008')
print(p)
dev.off()
)
library(shiny)
ui<-fliudpage("Hello World")
server <- function (input, output) {}
shinyApp(ui=ui, server=server)
ui<-fliudpage("Hello World")
library(shiny)
ui<-fluidpage("Hello World")
server <- function (input, output) {}
shinyApp(ui=ui, server=server)
library(shiny)
ui<-fluidpage("Hello World")
server <- function (input, output) {}
shinyApp(ui=ui, server=server)
library(shiny)
ui<-fluidpage("Hello World")
ui<-fluidpage("Hello World")
library(shiny)
ui<-fluidPage("Hello World")
server <- function (input, output) {}
shinyApp(ui=ui, server=server)
source('C:/testR/labs-r/Shiny/MyFirstShiny1.R')
library(shiny)
library(shiny)
ui<-fluidpage(
sliderInput (inputId = "num",
label= "Choose a Numbner",
value = 25, min = 1, maX = 100),
plotOutput ("hist")
)
library(shiny)
ui<-fluidPage(
sliderInput (inputId = "num",
label= "Choose a Numbner",
value = 25, min = 1, maX = 100),
plotOutput ("hist")
)
library(shiny)
ui<-fluidPage(
sliderInput (inputId = "num",
label= "Choose a Numbner",
value = 25, min = 1, maX = 100),
plotOutput ("hist")
)
server <- function(input, output) {
output$hist <- renderPlot ({
hist (rnorm(input$num))
})
}
shinyApp (ui = ui, server = server)
library(shiny)
ui<-fluidPage(
sliderInput (inputId = "num",
label= "Choose a Numbner",
value = 25, min = 1, maX = 100),
plotOutput ("hist")
)
server <- function(input, output) {
output$hist <- renderPlot ({
hist (rnorm(input$num))
})
}
shinyApp (ui = ui, server = server)
library(shiny)
ui<-fluidPage(
sliderInput (inputId = "num",
label= "Choose a Number",
value = 25, min = 1, maX = 100),
plotOutput ("hist")
)
server <- function(input, output) {
output$hist <- renderPlot ({
hist (rnorm(input$num))
})
}
shinyApp (ui = ui, server = server)
library(shiny)
ui<-fluidPage(
sliderInput (inputId = "num",
label= "Choose a Number",
value = 25, min = 1, max = 100),
plotOutput ("hist")
)
server <- function(input, output) {
output$hist <- renderPlot ({
hist (rnorm(input$num))
})
}
shinyApp (ui = ui, server = server)
?fluidpage
library(shiny)
library(shiny)
ui<-fluidPage(
sliderInput (inputId = "num",
label= "Choose a Number",
value = 25, min = 1, max = 100),
plotOutput ("hist")
)
server <- function(input, output) {
output$hist <- renderPlot ({
hist (rnorm(input$num))
})
}
shinyApp (ui = ui, server = server)
max(activity$interval)
max(activity$interval)
knit2html("PA1_template.Rmd ", "PA1_template.html")
setwd ("C:/testR/labs-r/repres/data")
knit2html("PA1_template.Rmd ", "PA1_template.html")
setwd ("C:/testR/labs-r/repres/PA1")
knit2html("PA1_template.Rmd ", "PA1_template.html")
library(knitr)
knit2html("PA1_template.Rmd ", "PA1_template.html")
knit2html("PA1_template.Rmd ", "PA1_template.html")
knit2html("PA1_template.Rmd ", "PA1_template.html")
knit2html("PA1_template.md ", "PA1_template.html")
knit2html("PA1_template.Rmd ", "PA1_template.html")
knit2html("PA1_template.Rmd ", "PA1_template.html")
knit2html("PA1_template.Rmd ", "PA1_template.html")
library (ggplot2)
knit2html("PA1_template.Rmd ", "PA1_template.html")
xyplot(steps ~ interval | daytype, stepsByDay, type = "l", layout = c(1, 2),
xlab = "Interval", ylab = "Number of steps")
?xyplot
??xyplot
library (lattice'')
library (lattice)
knit2html("PA1_template.Rmd ", "PA1_template.html")
knit2html("PA1_template.Rmd ", "PA1_template.html")
knit2html("PA1_template.Rmd ", "PA1_template.html")
knit2html("PA1_template.Rmd ", "PA1_template.html")
knit2html("PA1_template.Rmd ", "PA1_template.html")
